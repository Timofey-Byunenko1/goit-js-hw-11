{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["export async function fetchImages(query) {\n    const API_KEY = '47637626-a9f1551754daf4452dc005acb';\n    const BASE_URL = 'https://pixabay.com/api/';\n  \n    const response = await fetch(\n      `${BASE_URL}?key=${API_KEY}&q=${query}&image_type=photo&orientation=horizontal&safesearch=true`\n    );\n  \n    if (!response.ok) {\n      throw new Error('Failed to fetch images');\n    }\n  \n    return await response.json();\n  }","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nlet lightbox;\n\nexport function renderGallery(images, container) {\n  const markup = images\n    .map(\n      ({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n        <li class=\"gallery-item\">\n          <a class=\"gallery-link\" href=\"${largeImageURL}\">\n            <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" />\n          </a>\n          <div class=\"info\">\n            <p>Likes: ${likes}</p>\n            <p>Views: ${views}</p>\n            <p>Comments: ${comments}</p>\n            <p>Downloads: ${downloads}</p>\n          </div>\n        </li>`\n    )\n    .join('');\n\n  container.innerHTML = markup;\n\n  if (!lightbox) {\n    lightbox = new SimpleLightbox('.gallery a', { captionDelay: 250, captionsData: 'alt' });\n  } else {\n    lightbox.refresh();\n  }\n}","import { fetchImages } from './js/pixabay-api.js';\nimport { renderGallery } from './js/render-functions.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\n\nform.addEventListener('submit', onSearch);\n\nfunction onSearch(e) {\n  e.preventDefault();\n\n  const query = e.currentTarget.elements.searchQuery.value.trim();\n  if (!query) {\n    iziToast.warning({ message: 'Please enter a search query!' });\n    return;\n  }\n\n  loader.style.display = 'block';\n  fetchImages(query)\n    .then(data => {\n      if (data.hits.length === 0) {\n        iziToast.error({ message: 'No images found. Try another query.' });\n        return;\n      }\n      renderGallery(data.hits, gallery);\n    })\n    .catch(() => {\n      iziToast.error({ message: 'Something went wrong. Please try again.' });\n    })\n    .finally(() => {\n      loader.style.display = 'none';\n      form.reset();\n    });\n}"],"names":["fetchImages","query","response","lightbox","renderGallery","images","container","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","form","gallery","loader","onSearch","e","iziToast","data"],"mappings":"6vBAAO,eAAeA,EAAYC,EAAO,CAIrC,MAAMC,EAAW,MAAM,MACrB,qEAAgCD,CAAK,0DAC3C,EAEI,GAAI,CAACC,EAAS,GACZ,MAAM,IAAI,MAAM,wBAAwB,EAG1C,OAAO,MAAMA,EAAS,MAC1B,CCVA,IAAIC,EAEG,SAASC,EAAcC,EAAQC,EAAW,CAC/C,MAAMC,EAASF,EACZ,IACC,CAAC,CAAE,aAAAG,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAAO;AAAA;AAAA,0CAE1CL,CAAa;AAAA,8CACTD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,wBAGhDC,CAAK;AAAA,wBACLC,CAAK;AAAA,2BACFC,CAAQ;AAAA,4BACPC,CAAS;AAAA;AAAA,cAGhC,EACA,KAAK,EAAE,EAEVR,EAAU,UAAYC,EAEjBJ,EAGHA,EAAS,QAAO,EAFhBA,EAAW,IAAIY,EAAe,aAAc,CAAE,aAAc,IAAK,aAAc,KAAK,CAAE,CAI1F,CCzBA,MAAMC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,SAAS,EAE/CF,EAAK,iBAAiB,SAAUG,CAAQ,EAExC,SAASA,EAASC,EAAG,CACnBA,EAAE,eAAc,EAEhB,MAAMnB,EAAQmB,EAAE,cAAc,SAAS,YAAY,MAAM,OACzD,GAAI,CAACnB,EAAO,CACVoB,EAAS,QAAQ,CAAE,QAAS,8BAAgC,CAAA,EAC5D,MACD,CAEDH,EAAO,MAAM,QAAU,QACvBlB,EAAYC,CAAK,EACd,KAAKqB,GAAQ,CACZ,GAAIA,EAAK,KAAK,SAAW,EAAG,CAC1BD,EAAS,MAAM,CAAE,QAAS,qCAAuC,CAAA,EACjE,MACD,CACDjB,EAAckB,EAAK,KAAML,CAAO,CACtC,CAAK,EACA,MAAM,IAAM,CACXI,EAAS,MAAM,CAAE,QAAS,yCAA2C,CAAA,CAC3E,CAAK,EACA,QAAQ,IAAM,CACbH,EAAO,MAAM,QAAU,OACvBF,EAAK,MAAK,CAChB,CAAK,CACL"}